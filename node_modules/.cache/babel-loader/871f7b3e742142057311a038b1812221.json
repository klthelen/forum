{"ast":null,"code":"var _jsxFileName = \"/Users/kirkthelen/Documents/forum2/forum/src/subscript/universal/DynamicLink.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RenderLink = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"link\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      style: {\n        color: props.color\n      },\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/About\",\n      children: \"About\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/FAQ\",\n      children: \"FAQ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/Rules\",\n      children: \"Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = RenderLink;\n\nconst renderGrid = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"link\",\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      style: {\n        color: props.color\n      },\n      children: \"OnlyOne:)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\nfunction DynamicLink() {\n  _s();\n\n  const updateWidthAndHeight = () => {\n    setWidth(window.innerWidth);\n    setHeight(window.innerHeight);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidthAndHeight);\n    return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\n  });\n  const [width, setWidth] = React.useState(window.innerWidth);\n  const [height, setHeight] = React.useState(window.innerHeight);\n\n  if (width > 500) {\n    return /*#__PURE__*/_jsxDEV(RenderLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(RenderLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(DynamicLink, \"HlffPSgHgteiLZ+h8pdrq2WlDn4=\");\n\n_c2 = DynamicLink;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(DynamicLink, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 17\n}, this), rootElement);\nexport default DynamicLink;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RenderLink\");\n$RefreshReg$(_c2, \"DynamicLink\");","map":{"version":3,"sources":["/Users/kirkthelen/Documents/forum2/forum/src/subscript/universal/DynamicLink.js"],"names":["React","ReactDOM","RenderLink","props","color","renderGrid","DynamicLink","updateWidthAndHeight","setWidth","window","innerWidth","setHeight","innerHeight","useEffect","addEventListener","removeEventListener","width","useState","height","rootElement","document","getElementById","render"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAED,KAAK,CAACC;AAAd,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAG,MAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAG,MAAA,IAAI,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAG,MAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD;;KAAMF,U;;AAWN,MAAMG,UAAU,GAAGF,KAAK,IAAI;AACxB,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACA;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAED,KAAK,CAACC;AAAd,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;AAQA,SAASE,WAAT,GAAwB;AAAA;;AACpB,QAAMC,oBAAoB,GAAG,MAAM;AAC/BC,IAAAA,QAAQ,CAACC,MAAM,CAACC,UAAR,CAAR;AACAC,IAAAA,SAAS,CAACF,MAAM,CAACG,WAAR,CAAT;AACH,GAHD;;AAKAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AAClBJ,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCP,oBAAlC;AACA,WAAO,MAAME,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCR,oBAArC,CAAb;AACH,GAHD;AAKA,QAAM,CAACS,KAAD,EAAQR,QAAR,IAAoBR,KAAK,CAACiB,QAAN,CAAeR,MAAM,CAACC,UAAtB,CAA1B;AACA,QAAM,CAACQ,MAAD,EAASP,SAAT,IAAsBX,KAAK,CAACiB,QAAN,CAAeR,MAAM,CAACG,WAAtB,CAA5B;;AAEA,MAAGI,KAAK,GAAG,GAAX,EAAgB;AACZ,wBAAO,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAGK;AACD,wBAAQ,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;AACJ;;GApBQV,W;;MAAAA,W;AAsBT,MAAMa,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACApB,QAAQ,CAACqB,MAAT,eAAgB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAiCH,WAAjC;AACA,eAAeb,WAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst RenderLink = props => {\n    return (\n        <div className=\"link\">\n            <a href=\"/\" style={{color: props.color}}>Home</a>\n            <a href=\"/About\">About</a>\n            <a href=\"/FAQ\">FAQ</a>\n            <a href=\"/Rules\">Rules</a>\n        </div>\n    )\n}\n\nconst renderGrid = props => {\n    return (\n        <div className=\"link\">\n        <a href=\"/\" style={{color: props.color}}>OnlyOne:)</a>\n    </div>\n    )\n}\n\nfunction DynamicLink () {\n    const updateWidthAndHeight = () => {\n        setWidth(window.innerWidth);\n        setHeight(window.innerHeight);\n    };\n\n    React.useEffect(() => {\n        window.addEventListener(\"resize\", updateWidthAndHeight);\n        return () => window.removeEventListener(\"resize\", updateWidthAndHeight);\n    });\n\n    const [width, setWidth] = React.useState(window.innerWidth);\n    const [height, setHeight] = React.useState(window.innerHeight);\n    \n    if(width > 500) {\n        return(<RenderLink />)\n    }\n    else { \n        return (<RenderLink />)\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<DynamicLink />, rootElement); \nexport default DynamicLink;"]},"metadata":{},"sourceType":"module"}