{"ast":null,"code":"var _jsxFileName = \"/Users/kirkthelen/Documents/forum2/forum/src/pages/Login.js\";\n// import {useState, useEffect} from 'react' // Not currently used?\nimport React from \"react\";\nimport { Navbar, Footer } from '../subscript/universal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  var _s = $RefreshSig$();\n\n  // Determines whether to use grid-style or written link based on width of screen \n  function DynamicLink(props) {\n    _s();\n\n    const updateWidth = () => {\n      setWidth(window.innerWidth);\n    }; // Checks if user has resized window and updates width as necessary\n\n\n    React.useEffect(() => {\n      window.addEventListener(\"resize\", updateWidth);\n      return () => window.removeEventListener(\"resize\", updateWidth);\n    });\n    const [width, setWidth] = React.useState(window.innerWidth); // Chooses whether to show written links or grid links based on window width\n\n    if (width > 700) {\n      return /*#__PURE__*/_jsxDEV(Links, {\n        pageID: props.pageID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  _s(DynamicLink, \"cghfx8FI7JUDmCglGOKxHAxR30E=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"page-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"content-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          pageID: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"login-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              required: true //value {email}\n              //onChange={(e) => setEmail(e.target.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              required: true //value {password}\n              //onChange={(e) => setPassword(e.target.value)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/SignUp\",\n            children: \"Create An Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/kirkthelen/Documents/forum2/forum/src/pages/Login.js"],"names":["React","Navbar","Footer","Login","DynamicLink","props","updateWidth","setWidth","window","innerWidth","useEffect","addEventListener","removeEventListener","width","useState","pageID"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,MAAhB,QAA6B,wBAA7B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB;AACJ,WAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,UAAMC,WAAW,GAAG,MAAM;AACtBC,MAAAA,QAAQ,CAACC,MAAM,CAACC,UAAR,CAAR;AACH,KAFD,CADwB,CAKxB;;;AACAT,IAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AAClBF,MAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCL,WAAlC;AACA,aAAO,MAAME,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCN,WAArC,CAAb;AACH,KAHD;AAKA,UAAM,CAACO,KAAD,EAAQN,QAAR,IAAoBP,KAAK,CAACc,QAAN,CAAeN,MAAM,CAACC,UAAtB,CAA1B,CAXwB,CAaxB;;AACA,QAAGI,KAAK,GAAG,GAAX,EAAgB;AACZ,0BAAQ,QAAC,KAAD;AAAO,QAAA,MAAM,EAAER,KAAK,CAACU;AAArB;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFD,MAGK;AACD,0BAAQ,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;AACJ;;AAtBmB,KAEXX,WAFW;;AAuBhB,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACK;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAA,8BACG;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,EAAE,EAAC,iBAAR;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI;AAAA,oCACI;AACA,cAAA,IAAI,EAAG,OADP;AAEA,cAAA,WAAW,EAAG,OAFd;AAGA,cAAA,QAAQ,MAHR,CAIA;AACA;;AALA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARJ,eASI;AACA,cAAA,IAAI,EAAG,UADP;AAEA,cAAA,QAAQ,MAFR,CAGA;AACA;;AAJA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAuBI;AAAG,YAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eA8BG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cA9BH;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CA3DD;;KAAMD,K;AA6DN,eAAeA,KAAf","sourcesContent":["// import {useState, useEffect} from 'react' // Not currently used?\nimport React from \"react\"\nimport {Navbar, Footer} from '../subscript/universal'\n\nconst Login = () => {\n    // Determines whether to use grid-style or written link based on width of screen \nfunction DynamicLink(props) {\n    const updateWidth = () => {\n        setWidth(window.innerWidth);\n    };\n\n    // Checks if user has resized window and updates width as necessary\n    React.useEffect(() => {\n        window.addEventListener(\"resize\", updateWidth);\n        return () => window.removeEventListener(\"resize\", updateWidth);\n    });\n\n    const [width, setWidth] = React.useState(window.innerWidth);\n\n    // Chooses whether to show written links or grid links based on window width\n    if(width > 700) {\n        return (<Links pageID={props.pageID} />)\n    }\n    else { \n        return (<Grid />)\n    }\n}\n    return (  \n        <div className=\"Login\">\n             <div id=\"page-container\">\n                <div id=\"content-wrap\">\n                    <Navbar pageID={10}/>\n                    <div id=\"login-container\">\n                        <h1>Log in</h1>\n                        <h2>Email</h2>\n\n                        {/* */}\n                        <form > \n                            <input\n                            type = \"email\"\n                            placeholder = \"Email\"\n                            required\n                            //value {email}\n                            //onChange={(e) => setEmail(e.target.value)}\n                            />\n                            <h2>Password</h2>\n                            <input\n                            type = \"password\"\n                            required\n                            //value {password}\n                            //onChange={(e) => setPassword(e.target.value)}\n                            />\n                            {/* <h2></h2> */ }\n                            <button>Login</button>\n                        </form>\n                        <a href=\"/SignUp\">Create An Account</a>\n                    </div>\n\n                </div>\n                <Footer />\n            </div>\n        </div>\n    );\n}\n \nexport default Login;"]},"metadata":{},"sourceType":"module"}