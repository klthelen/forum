{"ast":null,"code":"var _jsxFileName = \"/Users/kirkthelen/Documents/forum2/forum/src/subscript/universal/DynamicLink.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ImageHover from \"./ImageHover\"; // Grid hover\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = {\n  white: \"/assets/gridWnb.png\",\n  gold: \"/assets/gridGnb.png\"\n}; // Written link navigation\n\nconst Links = props => {\n  function createLink(validID, ahref, title) {\n    if (props.pageID === validID) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"link-span--active\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: ahref,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"link-span--active\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: ahref,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"linkContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"link\",\n      children: [createLink(0, \"/\", \"Home\"), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"link-span\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/Threads\",\n          children: \"Threads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 46\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"link-span\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/About\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 46\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"link-span\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/FAQ\",\n          children: \"FAQ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 46\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"link-span\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/Rules\",\n          children: \"Rules\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 46\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"link-span-login\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/Login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}; // Grid-style navigation\n\n\n_c = Links;\n\nclass Grid extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.container = /*#__PURE__*/React.createRef();\n    this.state = {\n      open: false\n    };\n\n    this.handleButtonClick = () => {\n      this.setState(state => {\n        return {\n          open: !state.open\n        };\n      });\n    };\n\n    this.handleClickOutside = event => {\n      if (this.container.current && !this.container.current.contains(event.target)) {\n        this.setState({\n          open: false\n        });\n      }\n    };\n  }\n\n  // Invoked after component has been mounted\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  } // Last function called before component is removed from DOM\n\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  } // Used to close navigation if it is open and user clicks outside of it\n\n\n  render() {\n    let grid_class = this.state.open ? \"gridNavO\" : \"gridNavC\"; // this.state.open -> grid background is gold; !this.state.open -> grid background is transparent\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: grid_class,\n        ref: this.container,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"gridBtn\",\n          onClick: this.handleButtonClick,\n          children: [this.state.open && /*#__PURE__*/_jsxDEV(ImageHover, {\n            height: 50,\n            default: images.white,\n            hover: images.white,\n            className: \"none\",\n            altText: \"Navigation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 46\n          }, this), !this.state.open && /*#__PURE__*/_jsxDEV(ImageHover, {\n            height: 50,\n            default: images.gold,\n            hover: images.white,\n            className: \"none\",\n            altText: \"Navigation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), this.state.open && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 34\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/Threads\",\n                children: \"Threads\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 34\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/About\",\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 34\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/FAQ\",\n                children: \"FAQ\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 34\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/Rules\",\n                children: \"Rules\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 34\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/Login\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 34\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n} // Determines whether to use grid-style or written link based on width of screen \n\n\nfunction DynamicLink(props) {\n  _s();\n\n  const updateWidth = () => {\n    setWidth(window.innerWidth);\n  }; // Checks if user has resized window and updates width as necessary\n\n\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", updateWidth);\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  });\n  const [width, setWidth] = React.useState(window.innerWidth); // Chooses whether to show written links or grid links based on window width\n\n  if (width > 700) {\n    return /*#__PURE__*/_jsxDEV(Links, {\n      pageID: props.pageID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Grid, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(DynamicLink, \"cghfx8FI7JUDmCglGOKxHAxR30E=\");\n\n_c2 = DynamicLink;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(DynamicLink, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 134,\n  columnNumber: 17\n}, this), rootElement);\nexport default DynamicLink;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Links\");\n$RefreshReg$(_c2, \"DynamicLink\");","map":{"version":3,"sources":["/Users/kirkthelen/Documents/forum2/forum/src/subscript/universal/DynamicLink.js"],"names":["React","ReactDOM","ImageHover","images","white","gold","Links","props","createLink","validID","ahref","title","pageID","Grid","Component","container","createRef","state","open","handleButtonClick","setState","handleClickOutside","event","current","contains","target","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","render","grid_class","DynamicLink","updateWidth","setWidth","window","innerWidth","useEffect","width","useState","rootElement","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAAwC;;;AAGxC,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE,qBADI;AAEXC,EAAAA,IAAI,EAAE;AAFK,CAAf,C,CAKA;;AACA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACnB,WAASC,UAAT,CAAoBC,OAApB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2C;AACvC,QAAGJ,KAAK,CAACK,MAAN,KAAiBH,OAApB,EAA6B;AACzB,0BACI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,qCAAqC;AAAG,UAAA,IAAI,EAAEC,KAAT;AAAA,oBAAiBC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAKK;AACD,0BACI;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA,qCAAqC;AAAG,UAAA,IAAI,EAAED,KAAT;AAAA,oBAAiBC;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAArC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;AACJ;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,iBACKH,UAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,MAAT,CADf,eAEI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,qCAA6B;AAAG,UAAA,IAAI,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,qCAA6B;AAAG,UAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,qCAA6B;AAAG,UAAA,IAAI,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,qCAA6B;AAAG,UAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAOI;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA,+BACI;AAAG,UAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA7BD,C,CA+BA;;;KA/BMF,K;;AAgCN,MAAMO,IAAN,SAAmBb,KAAK,CAACc,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,SAD+B,gBACnBf,KAAK,CAACgB,SAAN,EADmB;AAAA,SAE/BC,KAF+B,GAEvB;AACJC,MAAAA,IAAI,EAAE;AADF,KAFuB;;AAAA,SAO/BC,iBAP+B,GAOX,MAAM;AACtB,WAAKC,QAAL,CAAcH,KAAK,IAAG;AAClB,eAAO;AACHC,UAAAA,IAAI,EAAE,CAACD,KAAK,CAACC;AADV,SAAP;AAGH,OAJD;AAKH,KAb8B;;AAAA,SA0B/BG,kBA1B+B,GA0BVC,KAAK,IAAI;AAC1B,UAAI,KAAKP,SAAL,CAAeQ,OAAf,IAA0B,CAAC,KAAKR,SAAL,CAAeQ,OAAf,CAAuBC,QAAvB,CAAgCF,KAAK,CAACG,MAAtC,CAA/B,EAA8E;AAC1E,aAAKL,QAAL,CAAc;AACVF,UAAAA,IAAI,EAAE;AADI,SAAd;AAGH;AACJ,KAhC8B;AAAA;;AAe/B;AACAQ,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKP,kBAA5C;AACH,GAlB8B,CAoB/B;;;AACAQ,EAAAA,oBAAoB,GAAG;AACnBF,IAAAA,QAAQ,CAACG,mBAAT,CAA6B,WAA7B,EAA0C,KAAKT,kBAA/C;AACH,GAvB8B,CAyB/B;;;AASAU,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAG,KAAKf,KAAL,CAAWC,IAAX,GAAkB,UAAlB,GAA+B,UAAhD,CADK,CAC2D;;AAEhE,wBACI;AAAA,mCACI;AAAK,QAAA,SAAS,EAAEc,UAAhB;AAA4B,QAAA,GAAG,EAAE,KAAKjB,SAAtC;AAAA,gCACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAE,SAAjC;AAA4C,UAAA,OAAO,EAAE,KAAKI,iBAA1D;AAAA,qBAGK,KAAKF,KAAL,CAAWC,IAAX,iBAAoB,QAAC,UAAD;AAAY,YAAA,MAAM,EAAE,EAApB;AAAwB,YAAA,OAAO,EAAEf,MAAM,CAACC,KAAxC;AAA+C,YAAA,KAAK,EAAED,MAAM,CAACC,KAA7D;AAAoE,YAAA,SAAS,EAAE,MAA/E;AAAuF,YAAA,OAAO,EAAE;AAAhG;AAAA;AAAA;AAAA;AAAA,kBAHzB,EAIK,CAAC,KAAKa,KAAL,CAAWC,IAAZ,iBAAqB,QAAC,UAAD;AAAY,YAAA,MAAM,EAAE,EAApB;AAAwB,YAAA,OAAO,EAAEf,MAAM,CAACE,IAAxC;AAA8C,YAAA,KAAK,EAAEF,MAAM,CAACC,KAA5D;AAAmE,YAAA,SAAS,EAAE,MAA9E;AAAsF,YAAA,OAAO,EAAE;AAA/F;AAAA;AAAA;AAAA;AAAA,kBAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EASK,KAAKa,KAAL,CAAWC,IAAX,iBACG;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAA,oCACA;AAAA,2CAAK;AAAG,gBAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,2CAAK;AAAG,gBAAA,IAAI,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,eAGA;AAAA,2CAAK;AAAG,gBAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA,eAIA;AAAA,2CAAK;AAAG,gBAAA,IAAI,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJA,eAKA;AAAA,2CAAK;AAAG,gBAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,oBALA,eAMA;AAAA,2CAAK;AAAG,gBAAA,IAAI,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,oBANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BH;;AA/D8B,C,CAkEnC;;;AACA,SAASe,WAAT,CAAqB1B,KAArB,EAA4B;AAAA;;AACxB,QAAM2B,WAAW,GAAG,MAAM;AACtBC,IAAAA,QAAQ,CAACC,MAAM,CAACC,UAAR,CAAR;AACH,GAFD,CADwB,CAKxB;;;AACArC,EAAAA,KAAK,CAACsC,SAAN,CAAgB,MAAM;AAClBF,IAAAA,MAAM,CAACR,gBAAP,CAAwB,QAAxB,EAAkCM,WAAlC;AACA,WAAO,MAAME,MAAM,CAACN,mBAAP,CAA2B,QAA3B,EAAqCI,WAArC,CAAb;AACH,GAHD;AAKA,QAAM,CAACK,KAAD,EAAQJ,QAAR,IAAoBnC,KAAK,CAACwC,QAAN,CAAeJ,MAAM,CAACC,UAAtB,CAA1B,CAXwB,CAaxB;;AACA,MAAGE,KAAK,GAAG,GAAX,EAAgB;AACZ,wBAAQ,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEhC,KAAK,CAACK;AAArB;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAFD,MAGK;AACD,wBAAQ,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;AACJ;;GApBQqB,W;;MAAAA,W;AAsBT,MAAMQ,WAAW,GAAGd,QAAQ,CAACe,cAAT,CAAwB,MAAxB,CAApB;AACAzC,QAAQ,CAAC8B,MAAT,eAAgB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAiCU,WAAjC;AACA,eAAeR,WAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ImageHover from \"./ImageHover\";  // Grid hover\n\n\nconst images = {\n    white: \"/assets/gridWnb.png\",\n    gold: \"/assets/gridGnb.png\",\n}\n\n// Written link navigation\nconst Links = props => {\n    function createLink(validID, ahref, title) {\n        if(props.pageID === validID) {\n            return(\n                <span className=\"link-span--active\"> <a href={ahref}>{title}</a></span>\n            )\n        }\n        else {\n            return(\n                <span className=\"link-span--active\"> <a href={ahref}>{title}</a></span>\n            )\n        }\n    }\n\n    return (\n        <div className=\"linkContainer\">\n            <div className=\"link\">\n                {createLink(0, \"/\", \"Home\")}\n                <span className=\"link-span\"> <a href=\"/Threads\">Threads</a> </span>\n                <span className=\"link-span\"> <a href=\"/About\">About</a> </span>\n                <span className=\"link-span\"> <a href=\"/FAQ\">FAQ</a> </span>\n                <span className=\"link-span\"> <a href=\"/Rules\">Rules</a> </span>\n                    \n                <span className=\"link-span-login\">\n                    <a href=\"/Login\">Login</a>\n                </span>\n            </div>\n        </div>\n    )\n}\n\n// Grid-style navigation\nclass Grid extends React.Component {\n    container = React.createRef();\n    state = {\n        open: false,\n    };\n\n    // Changes state when button is clicked\n    handleButtonClick = () => {\n        this.setState(state=> {\n            return {\n                open: !state.open,\n            };\n        });\n    };\n\n    // Invoked after component has been mounted\n    componentDidMount() {\n        document.addEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    // Last function called before component is removed from DOM\n    componentWillUnmount() {\n        document.removeEventListener(\"mousedown\", this.handleClickOutside);\n    }\n\n    // Used to close navigation if it is open and user clicks outside of it\n    handleClickOutside = event => {\n        if (this.container.current && !this.container.current.contains(event.target)) {\n            this.setState({\n                open: false,\n            });\n        }\n    };\n\n    render() {\n        let grid_class = this.state.open ? \"gridNavO\" : \"gridNavC\";     // this.state.open -> grid background is gold; !this.state.open -> grid background is transparent\n\n        return (\n            <div> {/* Have to return everything in a container */}\n                <div className={grid_class} ref={this.container}>\n                    <button type=\"button\" className={\"gridBtn\"} onClick={this.handleButtonClick}>\n\n                        {/* this.state.open -> grid is white; !this.state.open -> grid is gold, white on hover */}\n                        {this.state.open && (<ImageHover height={50} default={images.white} hover={images.white} className={\"none\"} altText={\"Navigation\"} />)}\n                        {!this.state.open && (<ImageHover height={50} default={images.gold} hover={images.white} className={\"none\"} altText={\"Navigation\"} />)}\n\n                    </button>\n                    {/* Displays dropdown only when list is open */}\n                    {this.state.open && (\n                        <div className=\"dropdown\">\n                            <ul>\n                            <li> <a href=\"/\">Home</a> </li>\n                            <li> <a href=\"/Threads\">Threads</a> </li>\n                            <li> <a href=\"/About\">About</a> </li>\n                            <li> <a href=\"/FAQ\">FAQ</a> </li>\n                            <li> <a href=\"/Rules\">Rules</a> </li>\n                            <li> <a href=\"/Login\">Login</a> </li>\n                            </ul>\n                        </div>\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\n// Determines whether to use grid-style or written link based on width of screen \nfunction DynamicLink(props) {\n    const updateWidth = () => {\n        setWidth(window.innerWidth);\n    };\n\n    // Checks if user has resized window and updates width as necessary\n    React.useEffect(() => {\n        window.addEventListener(\"resize\", updateWidth);\n        return () => window.removeEventListener(\"resize\", updateWidth);\n    });\n\n    const [width, setWidth] = React.useState(window.innerWidth);\n\n    // Chooses whether to show written links or grid links based on window width\n    if(width > 700) {\n        return (<Links pageID={props.pageID} />)\n    }\n    else { \n        return (<Grid />)\n    }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<DynamicLink />, rootElement); \nexport default DynamicLink;"]},"metadata":{},"sourceType":"module"}