{"ast":null,"code":"var _jsxFileName = \"/Users/kirkthelen/Documents/forum2/forum/src/subscript/universal/NewLink.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewLink = props => {\n  if (props.currentID === props.validID) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"link-span--active\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: props.ahref,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"link-span--active\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: props.ahref,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = NewLink;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(NewLink, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 17\n}, this), rootElement);\nexport default NewLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewLink\");","map":{"version":3,"sources":["/Users/kirkthelen/Documents/forum2/forum/src/subscript/universal/NewLink.js"],"names":["React","ReactDOM","NewLink","props","currentID","validID","ahref","title","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AACrB,MAAGA,KAAK,CAACC,SAAN,KAAoBD,KAAK,CAACE,OAA7B,EAAsC;AAClC,wBACI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA,mCAAqC;AAAG,QAAA,IAAI,EAAEF,KAAK,CAACG,KAAf;AAAA,kBAAuBH,KAAK,CAACI;AAA7B;AAAA;AAAA;AAAA;AAAA,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD,MAKK;AACD,wBACI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA,mCAAqC;AAAG,QAAA,IAAI,EAAEJ,KAAK,CAACG,KAAf;AAAA,kBAAuBH,KAAK,CAACI;AAA7B;AAAA;AAAA;AAAA;AAAA,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;AACJ,CAXD;;KAAML,O;AAaN,MAAMM,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAT,QAAQ,CAACU,MAAT,eAAgB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA6BH,WAA7B;AACA,eAAeN,OAAf","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst NewLink = props => {\n    if(props.currentID === props.validID) {\n        return(\n            <span className=\"link-span--active\"> <a href={props.ahref}>{props.title}</a></span>\n        )\n    }\n    else {\n        return(\n            <span className=\"link-span--active\"> <a href={props.ahref}>{props.title}</a></span>\n        )\n    }\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<NewLink />, rootElement); \nexport default NewLink;"]},"metadata":{},"sourceType":"module"}